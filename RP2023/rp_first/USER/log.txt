4.25
驱动部分全是抄马哥的模板代码

添加陀螺仪的IIC和SPI通讯切换
出现SPI通信时IMU初始化不成功，程序不运行
HAL_GPIO_WritePin(BMI_CS_GPIO_Port, BMI_CS_Pin, GPIO_PIN_RESET);	
置为低电平就不会卡死，但手册里写CSB需要一个上升沿
或者把while里的计数计时相关的内容去掉也可以解决

4.26
手册说的没错
imu的通信方式可以自由切换，但仅限于新主控，旧主控只能使用SPI无法使用IIC，
如果排除电压和程序问题，那么应该是由于旧主控上的引脚接了上拉电阻导致

等等，新主控的切换也很不稳定了（挠头）

SPI和IIC切换后要重新上电一次就行了，新旧主控都可以使用，真的太酷了！
LED还没适配旧主控

增加自动结算世界坐标系下的角速度
增加使能解算功能标志位
解算rpy、lpf、世界gyro，由于太懒了lpf功能还没加

增加串口测试功能，打开串口助手自动复读机
增加RP_CONFIG，用于控制全局功能

加入大疆电机包
删去领控电机内容
增加电机测试宏定义

由于电机的使用用了大量指针函数，所以千万别没初始化电机情况使用电机函数

用MXcube生成代码后要注释//  MX_SPI2_Init();

改正一些电机包的bug，角度周期值自减，更改单位值等等，主要pid计算使用360度制


4.27
增加陀螺仪的低通滤波器，可以给四个通道滤波
增加角度差获得世界角速度
增加遥控器、电容设备

4.28
增加电机GM3510、RM3510的电机包
自定义串口发送改为DMA
增加can发送清零，发送0判断
添加DSP库、很炸裂，整了五个钟，选择手动添加
添加了视觉模块、裁判系统模块，在config界面可以直接更改通信的串口

4.29
使用DSP库结算rpy但r轴都漂移很离谱不知道原因
和DSP无关，添加了一个死区导致

4.30
增加了四元数的左乘和右乘

5.1
陈子龙在这里加了一个延时，初始化一次过，并且完成速度由700++ms减到270++ms
if (rslt == BMI2_OK)
{
	/* Write the configuration file */
				dev->delay_us(1,NULL);
	rslt = bmi2_write_config_file(dev);
}


5.2
添加护身符BEST_BLESS_FOR_RPers

弄明白了imu的坐标转换，将世界的目标扭矩转到了实际的电机位置
相当于可以使用三轴云台，但目前还有一些问题:
当云台相对底盘旋转90，后再侧过底盘90度，在90度附近会有数据产生阶跃，
看数据是原始底盘的pitch数据跳变造成解算后的roll数据跳变，最后导致输出的极性发生跳变，
目前没时间解决，决定交给学弟解决，

往届云台控制算法是通过设定姿态以及imu绕世界的角速度进行控制，但存在云台不处于世界坐标系的情况
如底盘不水平，此时电机和云台不处于统一坐标系，也就是说加速度、速度、位置不处于同一坐标，
导致输出和输出不一致，
因此这里读取底盘的姿态，以及云台电机的姿态，并且忽略底盘姿态的yaw角变化，强制设为0，只关注yz轴
然后右乘电机系统姿态的四元数，转到对于云台而言的姿态，如侧身90°时，底盘的pitch对于电机是roll，
我们不妨将这个计算后的姿态称为相对姿态
然后再将pid计算的输出，右乘到相对姿态上，这样就能将期望输出的扭矩映射到对应的电机上

添加了陀螺仪的零飘检测
去掉了一部分不必要的计算
在添加零飘检测时导致了任务堆栈的溢出，更改后只进行一次计算阈值
可以设定计算次数，通过修改标志位重新计算，速度超过阈值会置为0

设备类型定义：
info：设备信息
data：设备的数据
指针函数

改掉了一些master监测的bug
改了遥控器的bug

5.18
修改了电机包，添加了steppid控制，类似步进电机的效果





